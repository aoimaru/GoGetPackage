[app/sources/322541390.Dockerfile]
digraph {
  "sha256:6f32f1e90e0aa90853bbaf2a5b5c694606c5b722c99b5fd290fd9841f4c5645b" [label="docker-image://mcr.microsoft.com/windows/nanoserver:1709" shape="ellipse"];
  "sha256:3c1ffb925fc3cabbfbeee15b29a9ce707d355982defcd5ddc836a264a4dfed16" [label="docker-image://mcr.microsoft.com/powershell:nanoserver" shape="ellipse"];
  "sha256:b0af27a83c8de7c1993fb975f198fb5a09b3d3a383834b1475adbf05895a0640" [label="pwsh -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-host \"Verifying valid Version...\";     if (!($env:PS_VERSION -match '^\\d+\\.\\d+\\.\\d+(-\\w+(\\.\\d+)?)?$' )) {         throw ('PS_Version ({0}) must match the regex \"^\\d+\\.\\d+\\.\\d+(-\\w+(\\.\\d+)?)?$\"' -f $env:PS_VERSION)     }     $ProgressPreference = 'SilentlyContinue';     if($env:PS_PACKAGE_URL_BASE64){         Write-host \"decoding: $env:PS_PACKAGE_URL_BASE64\" ;        $url = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($env:PS_PACKAGE_URL_BASE64))     } else {         Write-host \"using url: $env:PS_PACKAGE_URL\" ;        $url = $env:PS_PACKAGE_URL     }     Write-host \"downloading: $url\";     [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12;     New-Item -ItemType Directory /installer > $null ;     Invoke-WebRequest -Uri $url -outfile /installer/powershell.zip -verbose;     Expand-Archive /installer/powershell.zip -DestinationPath \\PowerShell" shape="box"];
  "sha256:6d094692674d09e3111e2e29dd775eff9f2008a92274cb5d4ebe46664442922a" [label="copy{src=/\\PowerShell\\, dest=/C:\\Program Files\\PowerShell}" shape="note"];
  "sha256:3cb49c3240a9a9914f8c9a41ed6c06d4591053d9751b242ff22252bfacd04845" [label="/bin/sh -c setx PATH \"%PATH%;%ProgramFiles%\\PowerShell;\"" shape="box"];
  "sha256:bd7ab8545d2ba9a73b116658b149cdee8d5398d84470922734176c2d048b2f19" [label="/bin/sh -c pwsh         -NoLogo         -NoProfile         -Command \"           $stopTime = (get-date).AddMinutes(15);           $ErrorActionPreference = 'Stop' ;           $ProgressPreference = 'SilentlyContinue' ;           while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) {              Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ;             if((get-date) -gt $stopTime) { throw 'timout expired'}             Start-Sleep -Seconds 6 ;           }\"" shape="box"];
  "sha256:9c27329bbcb96c89a3cc9f3a137679a2bf1fb842318160c725fbb2836f558fb4" [label="sha256:9c27329bbcb96c89a3cc9f3a137679a2bf1fb842318160c725fbb2836f558fb4" shape="plaintext"];
  "sha256:3c1ffb925fc3cabbfbeee15b29a9ce707d355982defcd5ddc836a264a4dfed16" -> "sha256:b0af27a83c8de7c1993fb975f198fb5a09b3d3a383834b1475adbf05895a0640" [label=""];
  "sha256:6f32f1e90e0aa90853bbaf2a5b5c694606c5b722c99b5fd290fd9841f4c5645b" -> "sha256:6d094692674d09e3111e2e29dd775eff9f2008a92274cb5d4ebe46664442922a" [label=""];
  "sha256:b0af27a83c8de7c1993fb975f198fb5a09b3d3a383834b1475adbf05895a0640" -> "sha256:6d094692674d09e3111e2e29dd775eff9f2008a92274cb5d4ebe46664442922a" [label=""];
  "sha256:6d094692674d09e3111e2e29dd775eff9f2008a92274cb5d4ebe46664442922a" -> "sha256:3cb49c3240a9a9914f8c9a41ed6c06d4591053d9751b242ff22252bfacd04845" [label=""];
  "sha256:3cb49c3240a9a9914f8c9a41ed6c06d4591053d9751b242ff22252bfacd04845" -> "sha256:bd7ab8545d2ba9a73b116658b149cdee8d5398d84470922734176c2d048b2f19" [label=""];
  "sha256:bd7ab8545d2ba9a73b116658b149cdee8d5398d84470922734176c2d048b2f19" -> "sha256:9c27329bbcb96c89a3cc9f3a137679a2bf1fb842318160c725fbb2836f558fb4" [label=""];
}

