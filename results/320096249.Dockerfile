[app/sources/320096249.Dockerfile]
digraph {
  "sha256:ad43fb8cde1aac595f1a4ea7cb1c424830b2c4d70b741b1dba334cd57974720b" [label="docker-image://docker.io/tensorflow/tensorflow:1.4.1-gpu-py3" shape="ellipse"];
  "sha256:16c5c72c0dae8f01a4824ef7f31a1885be9c3643cf2ccfab414c00616bae59c9" [label="/bin/sh -c apt-get -yqq update &&     apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 &&     buildDeps=\"autoconf                 automake                 cmake                 curl                 bzip2                 libexpat1-dev                 g++                 gcc                 git                 gperf                 libtool                 make                 nasm                 perl                 pkg-config                 python                 libssl-dev                 yasm                 zlib1g-dev\" &&     apt-get install -yq --no-install-recommends ${buildDeps} &&     export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz &&     echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz &&     ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 &&     echo ${X264_SHA256SUM} | sha256sum --check &&     tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 &&     ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  &&     echo ${X265_SHA256SUM} | sha256sum --check &&     tar -zx -f x265_${X265_VERSION}.tar.gz &&     cd x265_v${X265_VERSION}/build/linux &&     ./multilib.sh &&     make -C 8bit install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&     echo ${OGG_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&     ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&     echo ${OPUS_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&     autoreconf -fiv &&     ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&     echo ${VORBIS_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&     ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\"     --disable-static --datadir=\"${DIR}\" &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&     echo ${THEORA_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&     ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\"     --disable-static --datadir=\"${DIR}\" &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} &&     echo ${VPX_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f v${VPX_VERSION} &&     ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz &&     echo ${LAME_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz &&     ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&     echo ${XVID_SHA256SUM} | sha256sum --check &&     tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&     cd xvidcore/build/generic &&     ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz &&     echo ${FDKAAC_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz &&     autoreconf -fiv &&     ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" &&     make &&     make install &&     make distclean &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&     echo ${FREETYPE_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&     ./configure --disable-static --enable-shared &&     make &&     make install &&     make distclean &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&    echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&     cmake . &&     make &&     make install &&     rm -rf ${DIR} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz &&     echo ${FFMPEG_SHA256SUM} | sha256sum --check &&     tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz &&     ./configure     --bindir=\"${SRC}/bin\"     --disable-debug     --disable-doc     --disable-ffplay     --disable-static     --enable-avresample     --enable-gpl     --enable-libopencore-amrnb     --enable-libopencore-amrwb     --enable-libfdk_aac     --enable-libfreetype     --enable-libvidstab     --enable-libmp3lame     --enable-libopus     --enable-libtheora     --enable-libvorbis     --enable-libvpx     --enable-libx264     --enable-libx265     --enable-libxvid     --enable-nonfree     --enable-openssl     --enable-postproc     --enable-shared     --enable-small     --enable-version3     --extra-cflags=\"-I${SRC}/include\"     --extra-ldflags=\"-L${SRC}/lib\"     --extra-libs=-ldl     --prefix=\"${SRC}\" &&     make &&     make install &&     make distclean &&     hash -r &&     cd tools &&     make qt-faststart &&     cp qt-faststart ${SRC}/bin &&     rm -rf ${DIR} &&     opencvDeps=\"libopencv-dev qtbase5-dev\" &&     apt-get -yqq install ${opencvDeps} &&     DIR=$(mktemp -d) && cd ${DIR} &&     curl -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&     echo ${OPENCV_SHA256SUM} | sha256sum --check &&     tar xzvf ${OPENCV_VERSION}.tar.gz &&     cd opencv-${OPENCV_VERSION} &&     mkdir build && cd build &&     cmake -D CMAKE_INSTALL_PREFIX=/usr/local     -D CMAKE_BUILD_TYPE=RELEASE     -D FORCE_VTK=ON     -D WITH_TBB=ON     -D WITH_V4L=ON     -D WITH_QT=ON     -D WITH_OPENGL=ON     -D WITH_CUBLAS=ON     -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\"     -D WITH_GDAL=ON     -D WITH_XINE=ON     -D INSTALL_C_EXAMPLES=OFF     -D INSTALL_PYTHON_EXAMPLES=OFF     -D BUILD_EXAMPLES=OFF .. &&     make -j $(($(nproc) + 1)) &&     make install &&     /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' &&     ldconfig &&     rm -rf ${DIR} &&     cd &&     apt-get autoremove -y &&     apt-get clean -y" shape="box"];
  "sha256:285fddee438397a9260564885dd4dfffe4a77a98f9161afb1b22d97c21fc41b5" [label="sha256:285fddee438397a9260564885dd4dfffe4a77a98f9161afb1b22d97c21fc41b5" shape="plaintext"];
  "sha256:ad43fb8cde1aac595f1a4ea7cb1c424830b2c4d70b741b1dba334cd57974720b" -> "sha256:16c5c72c0dae8f01a4824ef7f31a1885be9c3643cf2ccfab414c00616bae59c9" [label=""];
  "sha256:16c5c72c0dae8f01a4824ef7f31a1885be9c3643cf2ccfab414c00616bae59c9" -> "sha256:285fddee438397a9260564885dd4dfffe4a77a98f9161afb1b22d97c21fc41b5" [label=""];
}

