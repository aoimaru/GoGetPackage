[app/sources/345369603.Dockerfile]
digraph {
  "sha256:761a7fd585d903974a424e5a99c2240f0f3b8cdce6f9452b1e8317b401b62092" [label="docker-image://docker.io/balenalib/kitra520-alpine:3.6-run" shape="ellipse"];
  "sha256:990cb0c2d21193efbd4c53f67abbb67b97b5c3d01cf9f4d7d80cfeb9027df5af" [label="/bin/sh -c apk add --no-cache libgcc libstdc++ libuv \t&& apk add --no-cache libssl1.0 || apk add --no-cache libssl1.1" shape="box"];
  "sha256:0485f7a138aa46705e31b075658e6793f9d86a9fe150dc0e6ef87030b62a7749" [label="/bin/sh -c buildDeps='curl' \t&& set -x \t&& for key in \t6A010C5166006599AA17F08146C2130DFD2497F5 \t; do \t\tgpg --keyserver pgp.mit.edu --recv-keys \"$key\" || \t\tgpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || \t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; \tdone \t&& apk add --no-cache $buildDeps \t&& curl -SLO \"http://resin-packages.s3.amazonaws.com/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-alpine-armhf.tar.gz\" \t&& echo \"1c59484912033ea8e398ebde62af22e4a4c8688e1b91a3ec8323e201c1aa1cf7  node-v$NODE_VERSION-linux-alpine-armhf.tar.gz\" | sha256sum -c - \t&& tar -xzf \"node-v$NODE_VERSION-linux-alpine-armhf.tar.gz\" -C /usr/local --strip-components=1 \t&& rm \"node-v$NODE_VERSION-linux-alpine-armhf.tar.gz\" \t&& curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \t&& curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \t&& gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \t&& mkdir -p /opt/yarn \t&& tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \t&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \t&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \t&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \t&& apk del $buildDeps \t&& npm config set unsafe-perm true -g --unsafe-perm \t&& rm -rf /tmp/*" shape="box"];
  "sha256:c79f22b540f3fb3b45c6cd3a41e9726b976c84da8b9e56290e8175cdd32cdd64" [label="sha256:c79f22b540f3fb3b45c6cd3a41e9726b976c84da8b9e56290e8175cdd32cdd64" shape="plaintext"];
  "sha256:761a7fd585d903974a424e5a99c2240f0f3b8cdce6f9452b1e8317b401b62092" -> "sha256:990cb0c2d21193efbd4c53f67abbb67b97b5c3d01cf9f4d7d80cfeb9027df5af" [label=""];
  "sha256:990cb0c2d21193efbd4c53f67abbb67b97b5c3d01cf9f4d7d80cfeb9027df5af" -> "sha256:0485f7a138aa46705e31b075658e6793f9d86a9fe150dc0e6ef87030b62a7749" [label=""];
  "sha256:0485f7a138aa46705e31b075658e6793f9d86a9fe150dc0e6ef87030b62a7749" -> "sha256:c79f22b540f3fb3b45c6cd3a41e9726b976c84da8b9e56290e8175cdd32cdd64" [label=""];
}

