[app/sources/252187504.Dockerfile]
digraph {
  "sha256:a79d0c3fe3b0c05f6ea5b62f437ccbd2b5440cd5c3d30dfb4b2061ef9575317f" [label="docker-image://docker.io/library/centos:6.6@sha256:32b80b90ba17ed16e9fa3430a49f53ff6de0d4c76ad8631717a1373d5921fa26" shape="ellipse"];
  "sha256:e7aa9881a79397a4d5c1fd632cef8b37aaf1dde84ed32137e61ffa8bbe9b7e95" [label="/bin/sh -c yum install -y perl-JSON" shape="box"];
  "sha256:aca7f82c1b28a66485f8b36db132e6d6738aa29de4666af938bba171449590f7" [label="/bin/sh -c curl -O http://traffic-control-cdn.net/downloads/trafficserver-5.3.2-599.089d585.el6.x86_64.rpm" shape="box"];
  "sha256:c4ccd19bf5cefdfd95ea0d1ab8a4c7f111f05225fd25b566724330c0dd707aeb" [label="/bin/sh -c yum install -y trafficserver-5.3.2-599.089d585.el6.x86_64.rpm" shape="box"];
  "sha256:c5d73e231f322b98c1a14dd34dc4419148ee3484f2090903c842b68e32fc42fa" [label="/bin/sh -c mkdir /opt/ort" shape="box"];
  "sha256:9f97b64ff1f46ca8df667290c93e166f0a29d8e6b9f4a96ff54192550a233350" [label="/bin/sh -c cd /opt/ort && curl -O https://raw.githubusercontent.com/Comcast/traffic_control/RELEASE-1.4.0-RC0/traffic_ops/bin/traffic_ops_ort.pl" shape="box"];
  "sha256:28e7f56d2244e4020fe9423887d622eae48411fd497060f434617fbca2bacf49" [label="/bin/sh -c chmod 777 /opt/ort/traffic_ops_ort.pl" shape="box"];
  "sha256:2998f1b5c603566aa8be6f02456eb3b6ec005eddaef45ec9c6abe80ac4c1ef73" [label="/bin/sh -c curl -O http://traffic-control-cdn.net/downloads/astats_over_http-1.2-8.el6.x86_64.rpm" shape="box"];
  "sha256:030c30a658c4af973c7a9700ff97967bbdec4d7c315eea3f10d14bdf8a5b0e36" [label="/bin/sh -c yum install -y astats_over_http-1.2-8.el6.x86_64.rpm" shape="box"];
  "sha256:d85bf2bcfd770ad545d1f55bc832cec3a9f2f5d0df5e27c60062404f5e370b02" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_cop" shape="box"];
  "sha256:a724c737cb7c9a008ef6ac6e3eb964a388071e2e9fa6ee380d573be48dfe34a1" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_crashlog" shape="box"];
  "sha256:069182568b572b0d7c519b1b7c4f6123d31fa337208c0a37e01e278174819f8a" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_ctl" shape="box"];
  "sha256:df4511ae91b370cb4f051707c7b62f3154ee6b9188d52da2fd5f6b20d6c69327" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_layout" shape="box"];
  "sha256:63ae33b37d389af79ea075a446c6eaf982e53218859c6b2eef4757af62e9f41c" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_line" shape="box"];
  "sha256:85cbce8464064e998c2f8c62a00960143ca1ad12b14f06f20cdea12a6833aea7" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_logcat" shape="box"];
  "sha256:77d9f2329b081fd8c7d76c785daad6c18b685440fa2edb271c81f67efd39901e" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_logstats" shape="box"];
  "sha256:6ac7d296b7f5fd05b0b20edcdd6f34cfd59c882ed7a7587a2bf6de349a8e0a1f" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_manager" shape="box"];
  "sha256:e6e613ba5247df8e6fcc208d7a1d01f27b77e99f819b13b2aa7336450100f0f1" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_sac" shape="box"];
  "sha256:4c8b170c4bdce74a75bdc97ca8bc55c7fae47a62679c4f1a259213171290e1cc" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/trafficserver" shape="box"];
  "sha256:8db7a3c6db2500df2f2d5ea234493183ba72a4d9d8633a4e1ee8b8bb418f8e2f" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_server" shape="box"];
  "sha256:6a49525f3699b6c9d1528917a4cd1944f4a6a58cce7d5ff764a947644234f5b4" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_top" shape="box"];
  "sha256:ae56c322b7136e7008d8e945a13f82727d3af077b211e9918fd0045abba8bbaa" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/traffic_via" shape="box"];
  "sha256:5b5d424ed6be8fda57a077788304708c9fe7abe453fe1ca46d4842d53de5abc3" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/tspush" shape="box"];
  "sha256:5c823bf755957f382bc0de45d9262431ed7581580a8a34490884d76d2b40dd3b" [label="/bin/sh -c setcap 'cap_net_bind_service=+ep' /opt/trafficserver/bin/tsxs" shape="box"];
  "sha256:bf6d1d574a9d396713e3053423939e47405eed5a76750be761eb6859ddee5a31" [label="/bin/sh -c curl -LO https://github.com/mozilla-services/heka/releases/download/v0.10.0/heka-0_10_0-linux-amd64.rpm" shape="box"];
  "sha256:866e200b92f99161d29afb104a836f9057809fe5c118f3ab5b7edfed8843b3d2" [label="/bin/sh -c yum install -y heka-0_10_0-linux-amd64.rpm" shape="box"];
  "sha256:73bb07cc53794bf69602fef7c28136cd9806cd2fe040f32e6e38829d4e3598a6" [label="/bin/sh -c mkdir etc/hekad" shape="box"];
  "sha256:74a1ff231359d1a1e61a6e22cac350ab4a81ff1d20f9fc42e1879835c31cbf03" [label="/bin/sh -c printf '[ats_traffic_logs] \\ntype = \"LogstreamerInput\" \\nsplitter = \"TokenSplitter\" \\ndecoder = \"ATS_transform_decoder\" \\nlog_directory = \"/opt/trafficserver/var/log/trafficserver\" \\nfile_match = \"custom_ats_2.log\" \\n[ATS_transform_decoder] \\ntype = \"PayloadRegexDecoder\" \\nmatch_regex = '\"'^(?P<UnixTimestamp>[\\d]+\\.[\\d]+) chi=(?P<chi>\\S+) phn=(?P<phn>\\S+) shn=(?P<shn>\\S+) url=(?P<url>\\S+) cqhm=(?P<cqhm>\\w+) cqhv=(?P<cqhv>\\S+) pssc=(?P<pssc>\\d+) ttms=(?P<ttms>\\d+) b=(?P<b>\\d+) sssc=(?P<sssc>\\d+) sscl=(?P<sscl>\\d+)  cfsc=(?P<cfsc>\\S+) pfsc=(?P<pfsc>\\S+) crc=(?P<crc>\\S+) phr=(?P<phr>\\S+) uas=(?P<uas>\\S+) xmt=(?P<xmt>\\S+)'\"' \\n\\n[ATS_transform_decoder.message_fields] \\nType = \"ats_traffic\" \\ntimestamp = \"%%UnixTimestamp%%\" \\nclientip = \"%%chi%%\" \\nhost = \"%%phn%%\" \\nshn = \"%%shn%%\" \\nurl = \"%%url%%\" \\nmethod = \"%%cqhm%%\" \\nversion = \"%%cqhv%%\" \\nstatus = \"%%pssc%%\" \\nrequest_duration = \"%%ttms%%\" \\nbytes = \"%%b%%\" \\nresponse_code = \"%%sssc%%\" \\nresponse_length = \"%%sscl%%\" \\nclient_status = \"%%cfsc%%\" \\nproxy_code = \"%%pfsc%%\" \\ncrc = \"%%crc%%\" \\nphr = \"%%phr%%\" \\nuseragent = \"%%uas%%\" \\nmoney_trace = \"%%xmt%%\" \\n[PayloadEncoder] \\ntype = \"PayloadEncoder\" \\n[FxaKafkaOutput] \\ntype = \"KafkaOutput\" \\ntopic = \"ipcdn\" \\nmessage_matcher = \"TRUE\" \\nencoder = \"PayloadEncoder\" \\naddrs = [\"{{.KafkaUri}}\"] \\n[Message_Counter] \\ntype = \"CounterFilter\" \\nmessage_matcher = \"Type != '\"'heka.counter-output'\"'\" \\nencoder = \"CounterLogEncoder\" \\n[CounterLogEncoder] \\ntype=\"PayloadEncoder\" \\nappend_newlines = true \\nprefix_ts = true \\nts_format = \"Mon Jan _2 15:04:05 MST 2006\" \\n[CounterLogOutput] \\ntype = \"FileOutput\" \\nmessage_matcher = \"Type == '\"'heka.counter-output'\"'\" \\nencoder = \"CounterLogEncoder\" \\npath = \"/tmp/hekad_counter.log\"' > /etc/hekad/heka.toml" shape="box"];
  "sha256:eaf96ff07f8f5b7aa2f444085012a9f6a3af4b40bde96fdbb85443e5c87304d1" [label="/bin/sh -c printf '#!/bin/sh \\n\\nif [ -f /etc/rc.status ]; then \\n    . /etc/rc.status \\n    rc_reset \\nfi \\nif [ -f /etc/rc.d/init.d/functions ]; then \\n    . /etc/rc.d/init.d/functions \\nfi \\n. /etc/init.d/functions \\nname=\"hekad\" \\nexec=\"/usr/bin/hekad\" \\nprog=\"hekad\" \\nuser=\"root\" \\ngroup=\"root\" \\npidfile=/var/run/${prog}.pid \\nconf=/etc/hekad/heka.toml \\nlog=/var/log/heka.log \\nDAEMON_ARGS=${DAEMON_ARGS---user root} \\nnice=19 \\nargs=\" --config $conf\" \\n[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog \\nlockfile=/var/lock/subsys/$prog \\nHEKA_USER=root \\nstart() { \\n    [ -x $exec ] || exit 5 \\n    [ -f $CONF_FILE ] || exit 6 \\n    nice -n ${nice} chroot --userspec $user:$group / sh -c \" exec \\\"$prog\\\" $args \" > ${log} 2>&1 & \\n  echo $! > $pidfile \\n  echo \"$name started.\" \\n  return 0 \\n} \\nstop() { \\n  if status ; then \\n    pid=`cat \"$pidfile\"` \\n    echo \"Killing $name (pid $pid) with SIGTERM\" \\n  kill -9 $pid \\n    for i in 1 2 3 4 5 ; do \\n      echo \"Waiting $name (pid $pid) to die...\" \\n      status || break \\n      sleep 1 \\n    done \\n    if status ; then \\n      echo \"$name stop failed; still running.\" \\n    else \\n      echo \"$name stopped.\" \\n    fi \\n  fi \\n} \\nrestart() { \\n    stop \\n    start \\n} \\nreload() { \\n    restart \\n} \\nforce_reload() { \\n    restart \\n} \\nstatus(){ \\n  if [ -f \"$pidfile\" ] ; then \\n    pid=`cat \"$pidfile\"` \\n    if kill -0 $pid > /dev/null 2> /dev/null ; then \\n      return 0 \\n    else \\n      return 2 # program is dead but pid file exists \\n    fi \\n  else \\n    return 3 # program is not running \\n  fi \\n} \\nrh_status() { \\n    status -p $pidfile $prog \\n} \\nrh_status_q() { \\n    rh_status >/dev/null 2>&1 \\n} \\ncase \"$1\" in \\n    start) \\n        rh_status_q && exit 0 \\n        $1 \\n        ;; \\n    stop) \\n        rh_status_q || exit 0 \\n        $1 \\n        ;; \\n    restart) \\n        $1 \\n        ;; \\n    reload) \\n        rh_status_q || exit 7 \\n        $1 \\n        ;; \\n    force-reload) \\n        force_reload \\n        ;; \\n    status) \\n     status \\n    code=$? \\n    if [ $code -eq 0 ] ; then \\n      echo \"$prog is running\" \\n    else \\n      echo \"$prog is not running\" \\n    fi \\n    exit $code \\n        ;; \\n    condrestart|try-restart) \\n        rh_status_q || exit 0 \\n        restart \\n        ;; \\n    *) \\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}\" \\n        exit 2 \\nesac' > /etc/init.d/hekad" shape="box"];
  "sha256:b4b04efd8c69d287f93937aae2caccdca7956f59ea6471769de8cc31f686fb96" [label="/bin/sh -c chmod +x /etc/init.d/hekad" shape="box"];
  "sha256:65c961896a76f63ed72669740ed063be50a57c07af1cee5198bbcc5c214003c4" [label="local://context" shape="ellipse"];
  "sha256:2578091bd0451bd8d2d858ae02619ea5b0d3f72d7f619746d23cfdd1a4349fad" [label="copy{src=/run.sh, dest=/}" shape="note"];
  "sha256:f78b34f9606bcdb2617f65ca92c2b8ead6de81553fd7f4a8cda904417500de5e" [label="sha256:f78b34f9606bcdb2617f65ca92c2b8ead6de81553fd7f4a8cda904417500de5e" shape="plaintext"];
  "sha256:a79d0c3fe3b0c05f6ea5b62f437ccbd2b5440cd5c3d30dfb4b2061ef9575317f" -> "sha256:e7aa9881a79397a4d5c1fd632cef8b37aaf1dde84ed32137e61ffa8bbe9b7e95" [label=""];
  "sha256:e7aa9881a79397a4d5c1fd632cef8b37aaf1dde84ed32137e61ffa8bbe9b7e95" -> "sha256:aca7f82c1b28a66485f8b36db132e6d6738aa29de4666af938bba171449590f7" [label=""];
  "sha256:aca7f82c1b28a66485f8b36db132e6d6738aa29de4666af938bba171449590f7" -> "sha256:c4ccd19bf5cefdfd95ea0d1ab8a4c7f111f05225fd25b566724330c0dd707aeb" [label=""];
  "sha256:c4ccd19bf5cefdfd95ea0d1ab8a4c7f111f05225fd25b566724330c0dd707aeb" -> "sha256:c5d73e231f322b98c1a14dd34dc4419148ee3484f2090903c842b68e32fc42fa" [label=""];
  "sha256:c5d73e231f322b98c1a14dd34dc4419148ee3484f2090903c842b68e32fc42fa" -> "sha256:9f97b64ff1f46ca8df667290c93e166f0a29d8e6b9f4a96ff54192550a233350" [label=""];
  "sha256:9f97b64ff1f46ca8df667290c93e166f0a29d8e6b9f4a96ff54192550a233350" -> "sha256:28e7f56d2244e4020fe9423887d622eae48411fd497060f434617fbca2bacf49" [label=""];
  "sha256:28e7f56d2244e4020fe9423887d622eae48411fd497060f434617fbca2bacf49" -> "sha256:2998f1b5c603566aa8be6f02456eb3b6ec005eddaef45ec9c6abe80ac4c1ef73" [label=""];
  "sha256:2998f1b5c603566aa8be6f02456eb3b6ec005eddaef45ec9c6abe80ac4c1ef73" -> "sha256:030c30a658c4af973c7a9700ff97967bbdec4d7c315eea3f10d14bdf8a5b0e36" [label=""];
  "sha256:030c30a658c4af973c7a9700ff97967bbdec4d7c315eea3f10d14bdf8a5b0e36" -> "sha256:d85bf2bcfd770ad545d1f55bc832cec3a9f2f5d0df5e27c60062404f5e370b02" [label=""];
  "sha256:d85bf2bcfd770ad545d1f55bc832cec3a9f2f5d0df5e27c60062404f5e370b02" -> "sha256:a724c737cb7c9a008ef6ac6e3eb964a388071e2e9fa6ee380d573be48dfe34a1" [label=""];
  "sha256:a724c737cb7c9a008ef6ac6e3eb964a388071e2e9fa6ee380d573be48dfe34a1" -> "sha256:069182568b572b0d7c519b1b7c4f6123d31fa337208c0a37e01e278174819f8a" [label=""];
  "sha256:069182568b572b0d7c519b1b7c4f6123d31fa337208c0a37e01e278174819f8a" -> "sha256:df4511ae91b370cb4f051707c7b62f3154ee6b9188d52da2fd5f6b20d6c69327" [label=""];
  "sha256:df4511ae91b370cb4f051707c7b62f3154ee6b9188d52da2fd5f6b20d6c69327" -> "sha256:63ae33b37d389af79ea075a446c6eaf982e53218859c6b2eef4757af62e9f41c" [label=""];
  "sha256:63ae33b37d389af79ea075a446c6eaf982e53218859c6b2eef4757af62e9f41c" -> "sha256:85cbce8464064e998c2f8c62a00960143ca1ad12b14f06f20cdea12a6833aea7" [label=""];
  "sha256:85cbce8464064e998c2f8c62a00960143ca1ad12b14f06f20cdea12a6833aea7" -> "sha256:77d9f2329b081fd8c7d76c785daad6c18b685440fa2edb271c81f67efd39901e" [label=""];
  "sha256:77d9f2329b081fd8c7d76c785daad6c18b685440fa2edb271c81f67efd39901e" -> "sha256:6ac7d296b7f5fd05b0b20edcdd6f34cfd59c882ed7a7587a2bf6de349a8e0a1f" [label=""];
  "sha256:6ac7d296b7f5fd05b0b20edcdd6f34cfd59c882ed7a7587a2bf6de349a8e0a1f" -> "sha256:e6e613ba5247df8e6fcc208d7a1d01f27b77e99f819b13b2aa7336450100f0f1" [label=""];
  "sha256:e6e613ba5247df8e6fcc208d7a1d01f27b77e99f819b13b2aa7336450100f0f1" -> "sha256:4c8b170c4bdce74a75bdc97ca8bc55c7fae47a62679c4f1a259213171290e1cc" [label=""];
  "sha256:4c8b170c4bdce74a75bdc97ca8bc55c7fae47a62679c4f1a259213171290e1cc" -> "sha256:8db7a3c6db2500df2f2d5ea234493183ba72a4d9d8633a4e1ee8b8bb418f8e2f" [label=""];
  "sha256:8db7a3c6db2500df2f2d5ea234493183ba72a4d9d8633a4e1ee8b8bb418f8e2f" -> "sha256:6a49525f3699b6c9d1528917a4cd1944f4a6a58cce7d5ff764a947644234f5b4" [label=""];
  "sha256:6a49525f3699b6c9d1528917a4cd1944f4a6a58cce7d5ff764a947644234f5b4" -> "sha256:ae56c322b7136e7008d8e945a13f82727d3af077b211e9918fd0045abba8bbaa" [label=""];
  "sha256:ae56c322b7136e7008d8e945a13f82727d3af077b211e9918fd0045abba8bbaa" -> "sha256:5b5d424ed6be8fda57a077788304708c9fe7abe453fe1ca46d4842d53de5abc3" [label=""];
  "sha256:5b5d424ed6be8fda57a077788304708c9fe7abe453fe1ca46d4842d53de5abc3" -> "sha256:5c823bf755957f382bc0de45d9262431ed7581580a8a34490884d76d2b40dd3b" [label=""];
  "sha256:5c823bf755957f382bc0de45d9262431ed7581580a8a34490884d76d2b40dd3b" -> "sha256:bf6d1d574a9d396713e3053423939e47405eed5a76750be761eb6859ddee5a31" [label=""];
  "sha256:bf6d1d574a9d396713e3053423939e47405eed5a76750be761eb6859ddee5a31" -> "sha256:866e200b92f99161d29afb104a836f9057809fe5c118f3ab5b7edfed8843b3d2" [label=""];
  "sha256:866e200b92f99161d29afb104a836f9057809fe5c118f3ab5b7edfed8843b3d2" -> "sha256:73bb07cc53794bf69602fef7c28136cd9806cd2fe040f32e6e38829d4e3598a6" [label=""];
  "sha256:73bb07cc53794bf69602fef7c28136cd9806cd2fe040f32e6e38829d4e3598a6" -> "sha256:74a1ff231359d1a1e61a6e22cac350ab4a81ff1d20f9fc42e1879835c31cbf03" [label=""];
  "sha256:74a1ff231359d1a1e61a6e22cac350ab4a81ff1d20f9fc42e1879835c31cbf03" -> "sha256:eaf96ff07f8f5b7aa2f444085012a9f6a3af4b40bde96fdbb85443e5c87304d1" [label=""];
  "sha256:eaf96ff07f8f5b7aa2f444085012a9f6a3af4b40bde96fdbb85443e5c87304d1" -> "sha256:b4b04efd8c69d287f93937aae2caccdca7956f59ea6471769de8cc31f686fb96" [label=""];
  "sha256:b4b04efd8c69d287f93937aae2caccdca7956f59ea6471769de8cc31f686fb96" -> "sha256:2578091bd0451bd8d2d858ae02619ea5b0d3f72d7f619746d23cfdd1a4349fad" [label=""];
  "sha256:65c961896a76f63ed72669740ed063be50a57c07af1cee5198bbcc5c214003c4" -> "sha256:2578091bd0451bd8d2d858ae02619ea5b0d3f72d7f619746d23cfdd1a4349fad" [label=""];
  "sha256:2578091bd0451bd8d2d858ae02619ea5b0d3f72d7f619746d23cfdd1a4349fad" -> "sha256:f78b34f9606bcdb2617f65ca92c2b8ead6de81553fd7f4a8cda904417500de5e" [label=""];
}

