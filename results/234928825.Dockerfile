[app/sources/234928825.Dockerfile]
digraph {
  "sha256:a9d5339dc272a076729fd19162579d88f589b6fe1c22d96d5058455bab132801" [label="docker-image://docker.io/library/adoptopenjdk:11-jre-hotspot" shape="ellipse"];
  "sha256:647e239865dcc29d9205806ee5f79b131f64bf60b34cee047795c001979bd833" [label="/bin/sh -c set -o errexit -o nounset     && echo \"Adding groovy user and group\"     && groupadd --system --gid 1000 groovy     && useradd --system --gid groovy --uid 1000 --shell /bin/bash --create-home groovy     && mkdir --parents /home/groovy/.groovy/grapes     && chown --recursive groovy:groovy /home/groovy         && echo \"Symlinking root .groovy to groovy .groovy\"     && ln --symbolic /home/groovy/.groovy /root/.groovy" shape="box"];
  "sha256:334b0542f29167a98bb30ed4d3157474b2c579f05aad35528dab90922fb8512f" [label="mkdir{path=/home/groovy}" shape="note"];
  "sha256:1e9099a2501f5e30d7169e7fbf412271a9d051f96a10950cc9fd31f68ffc005f" [label="/bin/sh -c apt-get update     && echo \"Installing build dependencies\"     && apt-get install --yes --no-install-recommends         dirmngr         fontconfig         gnupg         unzip         wget     && rm --recursive --force /var/lib/apt/lists/*" shape="box"];
  "sha256:0daecd0eab2b03e8778d229d66d9283b6492bc2418bad791d9dab6ebfb9ca27d" [label="/bin/sh -c set -o errexit -o nounset     && echo \"Downloading Groovy\"     && wget --no-verbose --output-document=groovy.zip \"https://dist.apache.org/repos/dist/release/groovy/${GROOVY_VERSION}/distribution/apache-groovy-binary-${GROOVY_VERSION}.zip\"         && echo \"Importing keys listed in http://www.apache.org/dist/groovy/KEYS from key server\"     && export GNUPGHOME=\"$(mktemp -d)\";     for key in         \"7FAA0F2206DE228F0DB01AD741321490758AAD6F\"         \"331224E1D7BE883D16E8A685825C06C827AF6B66\"         \"34441E504A937F43EB0DAEF96A65176A0FB1CD0B\"         \"9A810E3B766E089FFB27C70F11B595CEDC4AEBB5\"         \"81CABC23EECA0790E8989B361FF96E10F0E13706\"     ; do         for server in             \"ha.pool.sks-keyservers.net\"             \"hkp://p80.pool.sks-keyservers.net:80\"             \"pgp.mit.edu\"         ; do             echo \"  Trying ${server}\";             if gpg --batch --no-tty --keyserver \"${server}\" --recv-keys \"${key}\"; then                 break;             fi;         done;     done;     if [ $(gpg --batch --no-tty --list-keys | grep --count \"pub \") -ne 5 ]; then         echo \"ERROR: Failed to fetch GPG keys\" >&2;         exit 1;     fi         && echo \"Checking download signature\"     && wget --no-verbose --output-document=groovy.zip.asc \"https://dist.apache.org/repos/dist/release/groovy/${GROOVY_VERSION}/distribution/apache-groovy-binary-${GROOVY_VERSION}.zip.asc\"     && gpg --batch --no-tty --verify groovy.zip.asc groovy.zip     && rm --recursive --force \"${GNUPGHOME}\"     && rm groovy.zip.asc         && echo \"Installing Groovy\"     && unzip groovy.zip     && rm groovy.zip     && mv \"groovy-${GROOVY_VERSION}\" \"${GROOVY_HOME}/\"     && ln --symbolic \"${GROOVY_HOME}/bin/grape\" /usr/bin/grape     && ln --symbolic \"${GROOVY_HOME}/bin/groovy\" /usr/bin/groovy     && ln --symbolic \"${GROOVY_HOME}/bin/groovyc\" /usr/bin/groovyc     && ln --symbolic \"${GROOVY_HOME}/bin/groovyConsole\" /usr/bin/groovyConsole     && ln --symbolic \"${GROOVY_HOME}/bin/groovydoc\" /usr/bin/groovydoc     && ln --symbolic \"${GROOVY_HOME}/bin/groovysh\" /usr/bin/groovysh     && ln --symbolic \"${GROOVY_HOME}/bin/java2groovy\" /usr/bin/java2groovy         && echo \"Editing startGroovy to include java.xml.bind module\"     && sed --in-place 's|startGroovy ( ) {|startGroovy ( ) {\\n    JAVA_OPTS=\"$JAVA_OPTS --add-modules=ALL-SYSTEM\"|' \"${GROOVY_HOME}/bin/startGroovy\"" shape="box"];
  "sha256:23e677c116fb31b1a7ce83c45f0aec680c2ba134b87c54fdbff1eab85a8ac9f7" [label="/bin/sh -c set -o errexit -o nounset     && echo \"Testing Groovy installation\"     && groovy --version" shape="box"];
  "sha256:b75828e2d771858dc7c56cd944eab43753c3e52656a3ce44ac96f0f84be020a5" [label="sha256:b75828e2d771858dc7c56cd944eab43753c3e52656a3ce44ac96f0f84be020a5" shape="plaintext"];
  "sha256:a9d5339dc272a076729fd19162579d88f589b6fe1c22d96d5058455bab132801" -> "sha256:647e239865dcc29d9205806ee5f79b131f64bf60b34cee047795c001979bd833" [label=""];
  "sha256:647e239865dcc29d9205806ee5f79b131f64bf60b34cee047795c001979bd833" -> "sha256:334b0542f29167a98bb30ed4d3157474b2c579f05aad35528dab90922fb8512f" [label=""];
  "sha256:334b0542f29167a98bb30ed4d3157474b2c579f05aad35528dab90922fb8512f" -> "sha256:1e9099a2501f5e30d7169e7fbf412271a9d051f96a10950cc9fd31f68ffc005f" [label=""];
  "sha256:1e9099a2501f5e30d7169e7fbf412271a9d051f96a10950cc9fd31f68ffc005f" -> "sha256:0daecd0eab2b03e8778d229d66d9283b6492bc2418bad791d9dab6ebfb9ca27d" [label=""];
  "sha256:0daecd0eab2b03e8778d229d66d9283b6492bc2418bad791d9dab6ebfb9ca27d" -> "sha256:23e677c116fb31b1a7ce83c45f0aec680c2ba134b87c54fdbff1eab85a8ac9f7" [label=""];
  "sha256:23e677c116fb31b1a7ce83c45f0aec680c2ba134b87c54fdbff1eab85a8ac9f7" -> "sha256:b75828e2d771858dc7c56cd944eab43753c3e52656a3ce44ac96f0f84be020a5" [label=""];
}

